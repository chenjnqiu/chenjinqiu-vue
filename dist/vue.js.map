{"version":3,"file":"vue.js","sources":["../src/index.js"],"sourcesContent":["// 用一个全局变量存储被注册的副作用函数\r\nlet activeEffect\r\n// effect 函数用于注册副作用函数\r\nfunction effect(fn) {\r\n    const effectFn = () => {\r\n        // 调用 cleanup 函数完成清除工作\r\n        cleanup(effectFn)\r\n        // 当 effectFn 执行时，将其设置为当前激活的副作用函数\r\n        activeEffect = effectFn\r\n        fn()\r\n    }\r\n    // activeEffect.deps 用来存储所有与该副作用函数相关联的依赖集合\r\n    effectFn.deps = []\r\n    // 执行副作用函数\r\n    effectFn()\r\n}\r\n\r\n\r\n// 原始数据\r\nconst data = { foo: true, bar: true }\r\n// 储存副作用桶\r\nconst bucket = new WeakMap()\r\n// 对原始数据拦截(只有在拦截对象obj上面操作才会走get或者set方法，在原始数据data上面操作不会走get或者set方法)\r\nconst obj = new Proxy(data, {\r\n    // 拦截读取操作\r\n    get: function (target, key) {\r\n        // 将副作用函数 activeEffect 添加到存储副作用函数的桶中\r\n        track(target, key)\r\n        return target[key]\r\n    },\r\n    // 拦截设置操作\r\n    set: function (target, key, newVal) {\r\n        // 设置属性值\r\n        target[key] = newVal\r\n        // 把副作用函数从桶里取出并执行\r\n        trigger(target, key)\r\n    }\r\n})\r\n\r\n// 全局变量\r\nlet temp1, temp2\r\n\r\n// effectFn1 嵌套了 effectFn2\r\neffect(function effectFn1() {\r\n    console.log('effectFn1 执行')\r\n\r\n    effect(function effectFn2() {\r\n        console.log('effectFn2 执行')\r\n        // 在 effectFn2 中读取 obj.bar 属性\r\n        temp2 = obj.bar\r\n    })\r\n    // 在 effectFn1 中读取 obj.foo 属性\r\n    temp1 = obj.foo\r\n})\r\n\r\n// effect(() => {\r\n//     document.body.innerText = obj.text\r\n// })\r\n\r\n// 1秒后修改响应式数据\r\nsetTimeout(() => {\r\n    // 副作用函数中并没有读取 notExist 属性的值\r\n    // obj.text = 'hello vue3'\r\n    obj.bar = false\r\n}, 2000)\r\n\r\n// 在 get 拦截函数内调用 track 函数追踪变化 \r\nfunction track(target, key) {\r\n    // 没有 activeEffect，直接 return\r\n    if (!activeEffect) return target[key]\r\n    // 根据 target 从“桶”中取得 depsMap，它也是一个 Map 类型：key -->effects\r\n    let depsMap = bucket.get(target)\r\n    // 如果不存在 depsMap，那么新建一个 Map 并与 target 关联\r\n    if (!depsMap) {\r\n        bucket.set(target, (depsMap = new Map()))\r\n    }\r\n    // 再根据 key 从 depsMap 中取得 deps，它是一个 Set 类型，里面存储着所有与当前 key 相关联的副作用函数：effects\r\n    let deps = depsMap.get(key)\r\n    // 如果 deps 不存在，同样新建一个 Set 并与 key 关联\r\n    if (!deps) {\r\n        depsMap.set(key, (deps = new Set()))\r\n    }\r\n    // 最后将当前激活的副作用函数添加到“桶”里\r\n    deps.add(activeEffect)\r\n    // deps 就是一个与当前副作用函数存在联系的依赖集合\r\n    // 将其添加到 activeEffect.deps 数组中\r\n    activeEffect.deps.push(deps) // 新增\r\n}\r\n\r\n// 在 set 拦截函数内调用 trigger 函数触发变化\r\nfunction trigger(target, key) {\r\n    const depsMap = bucket.get(target)\r\n    if (!depsMap) return\r\n    const effects = depsMap.get(key)\r\n    const effectsToRun = new Set(effects) // 新增\r\n    effectsToRun.forEach(effectFn => effectFn())\r\n}\r\n\r\n// 副作用执行时先清除之前的副作用\r\nfunction cleanup(effectFn) {\r\n    // 遍历 effectFn.deps 数组\r\n    for (let i = 0; i < effectFn.deps.length; i++) {\r\n        // deps 是依赖集合\r\n        const deps = effectFn.deps[i]\r\n        // 将 effectFn 从依赖集合中移除\r\n        deps.delete(effectFn)\r\n    }\r\n    // 最后需要重置 effectFn.deps 数组\r\n    effectFn.deps.length = 0\r\n}"],"names":["activeEffect","effect","fn","effectFn","cleanup","i","deps","length","bucket","WeakMap","obj","Proxy","foo","bar","get","target","key","depsMap","set","Map","Set","add","push","newVal","effects","forEach","console","log","setTimeout"],"mappings":"+WACA,IAAIA,EAEJ,SAASC,EAAOC,GACK,SAAXC,IAiGN,IA/FIC,IA6FSD,EA7FDA,EA+FHE,EAAI,EAAGA,EAAIF,EAASG,KAAKC,OAAQF,CAAC,GAE1BF,EAASG,KAAKD,GAEvB,OAAQF,CAAQ,EAGxBA,EAASG,KAAKC,OAAS,EApGnBP,EAAeG,EACfD,IAGJC,EAASG,KAAO,GAEhBH,GACJ,CAIA,IAEMK,EAAS,IAAIC,QAEbC,EAAM,IAAIC,MAJH,CAAEC,IAAK,CAAA,EAAMC,IAAK,CAAA,CAAK,EAIR,CAExBC,IAAK,SAAUC,EAAQC,GAGnB,OAuCR,SAAeD,EAAQC,GAEnB,GAAI,CAAChB,EAAc,OAAOe,EAAOC,GAEjC,IAAIC,EAAUT,EAAOM,IAAIC,CAAM,EAE1BE,GACDT,EAAOU,IAAIH,EAASE,EAAU,IAAIE,GAAK,EAGvCb,EAAOW,EAAQH,IAAIE,CAAG,EAErBV,GACDW,EAAQC,IAAIF,EAAMV,EAAO,IAAIc,GAAK,EAGtCd,EAAKe,IAAIrB,CAAY,EAGrBA,EAAaM,KAAKgB,KAAKhB,CAAI,CAC/B,EA5DcS,EAAQC,CAAG,EACVD,EAAOC,EACjB,EAEDE,IAAK,SAAUH,EAAQC,EAAKO,GAExBR,EAAOC,GAAOO,EAyDLR,EAvDDA,EAuDSC,EAvDDA,GAwDdC,EAAUT,EAAOM,IAAIC,CAAM,KAE3BS,EAAUP,EAAQH,IAAIE,CAAG,EACV,IAAII,IAAII,CAAO,EACvBC,QAAQ,SAAAtB,GAAQ,OAAIA,EAAQ,EAAG,EA3D5C,CACJ,CAAC,EAMDF,EAAO,WACHyB,QAAQC,IAAI,cAAc,EAE1B1B,EAAO,WACHyB,QAAQC,IAAI,cAAc,EAElBjB,EAAIG,GAChB,CAAC,EAEOH,EAAIE,GAChB,CAAC,EAODgB,WAAW,WAGPlB,EAAIG,IAAM,CAAA,CACd,EAAG,GAAI"}